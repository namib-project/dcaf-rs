on:
  push:
    branches:
      - main
  pull_request:

name: Continuous Integration

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustc, cargo, rust-std
      - run: cargo check

  check_nostd:
    name: Check (no_std)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustc, cargo
      - run: cargo check --no-default-features

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustc, cargo, rust-std
      - run: cargo test

  test_all_features:
    name: Test Suite (all features)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustc, cargo, rust-std
      - run: cargo test --all-features

  test_nostd:
    name: Test Suite (no_std)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustc, cargo
      - run: cargo test --no-default-features --features openssl,rustcrypto

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check

  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: giraffate/clippy-action@main
        with:
          reporter: 'github-check'
          clippy_flags: --no-deps --all-features
          level: warning
          fail_on_error: true

  test_coverage:
    runs-on: ubuntu-latest
    env:
      COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustc, rust-std, cargo, llvm-tools, llvm-tools-preview
      - uses: baptiste0928/cargo-install@v3
        with:
          crate: grcov
      - run: cargo clean
      - run: mkdir -p ./target/debug/coverage
      - run: cargo test --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: '0'
          LLVM_PROFILE_FILE: 'target/debug/coverage/dcaf-%p-%m.profraw'
          RUSTFLAGS: '-Cinstrument-coverage -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-C instrument-coverage -Cpanic=abort -Zpanic_abort_tests -Z unstable-options --persist-doctests target/debug/'
      - run: zip ./target/debug/coverage/files.zip ./target/debug/coverage/dcaf-*.profraw
      - run: grcov ./target/debug/coverage/files.zip -s . --binary-path ./target/debug/ --service-name "Continuous Integration" --commit-sha ${GITHUB_SHA} -t coveralls --branch --ignore-not-existing --ignore "../*" --ignore "/*" --ignore "*/test_helper.rs" -o ./target/debug/coverage/ --token=${COVERALLS_TOKEN}
      - name: Coveralls upload
        uses: coverallsapp/github-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: ./target/debug/coverage/coveralls
